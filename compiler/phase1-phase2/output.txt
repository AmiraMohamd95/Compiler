METHOD_BODY

STATEMENT_LIST 

STATEMENT_LIST_ ; id PRIMITIVE_TYPE 

STATEMENT_LIST_ ; id int 

STATEMENT_LIST_ ; EXPRESSION = id 

STATEMENT_LIST_ ; EXPRESSION_ SIMPLE_EXPRESSION 

STATEMENT_LIST_ ; EXPRESSION_ SIMPLE_EXPRESSION_ TERM 

STATEMENT_LIST_ ; EXPRESSION_ SIMPLE_EXPRESSION_ TERM_ num 

STATEMENT_LIST_ ; EXPRESSION_ SIMPLE_EXPRESSION_ 

STATEMENT_LIST_ ; EXPRESSION_ 

STATEMENT_LIST_ ; 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) EXPRESSION_ SIMPLE_EXPRESSION ( if 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) EXPRESSION_ SIMPLE_EXPRESSION_ TERM 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) EXPRESSION_ SIMPLE_EXPRESSION_ TERM_ id 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) EXPRESSION_ SIMPLE_EXPRESSION_ 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) EXPRESSION_ 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) SIMPLE_EXPRESSION relop 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) SIMPLE_EXPRESSION_ TERM 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) SIMPLE_EXPRESSION_ TERM_ num 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) SIMPLE_EXPRESSION_ 

STATEMENT_LIST_ } STATEMENT { else } STATEMENT { ) 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION = id 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION_ SIMPLE_EXPRESSION 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION_ SIMPLE_EXPRESSION_ TERM 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION_ SIMPLE_EXPRESSION_ TERM_ num 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION_ SIMPLE_EXPRESSION_ 

STATEMENT_LIST_ } STATEMENT { else } ; EXPRESSION_ 

STATEMENT_LIST_ } STATEMENT { else } ; 

STATEMENT_LIST_ } WHILE 

STATEMENT_LIST_ } } STATEMENT { ) EXPRESSION_ SIMPLE_EXPRESSION ( while 
TERMINAL_ERROR:missing (
ERROR:EXTRA }
ERROR:End of tokens and productions stack is not empty
