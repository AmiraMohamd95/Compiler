Terminals unused in grammar

   T_boolean
   Comma


Grammar

    0 $accept: METHOD_BODY $end

    1 METHOD_BODY: %empty
    2            | STATEMENT_LIST

    3 STATEMENT_LIST: STATEMENT
    4               | STATEMENT_LIST STATEMENT

    5 STATEMENT: DECLARATION
    6          | IF
    7          | WHILE
    8          | ASSIGNMENT
    9          | PRINT

   10 $@1: %empty

   11 DECLARATION: PRIMITIVE_TYPE id $@1 Semi

   12 PRIMITIVE_TYPE: T_int
   13               | T_float

   14 $@2: %empty

   15 $@3: %empty

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

   17 $@4: %empty

   18 $@5: %empty

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

   20 ASSIGNMENT: id assign EXPRESSION Semi

   21 EXPRESSION: SIMPLE_EXPRESSION
   22           | SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION

   23 SIMPLE_EXPRESSION: TERM
   24                  | Minus TERM
   25                  | SIMPLE_EXPRESSION Plus TERM
   26                  | SIMPLE_EXPRESSION Minus TERM

   27 TERM: FACTOR
   28     | TERM Mul FACTOR
   29     | TERM Div FACTOR

   30 FACTOR: id
   31       | num
   32       | OPEN EXPRESSION CLOSE

   33 $@6: %empty

   34 PRINT: SYSOUT OPEN $@6 FACTOR CLOSE Semi


Terminals, with rules where they appear

$end (0) 0
error (256)
id (258) 11 20 30
num (259) 31
relop (260) 22
T_float (261) 13
T_int (262) 12
SYSOUT (263) 34
Plus (264) 25
Mul (265) 28
Minus (266) 24 26
Div (267) 29
OPEN (268) 16 19 32 34
CLOSE (269) 16 19 32 34
T_boolean (270)
T_if (271) 16
T_else (272) 16
T_while (273) 19
assign (274) 20
Semi (275) 11 20 34
Comma (276)
Openbracket (277) 16 19
Closebracket (278) 16 19


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
METHOD_BODY (25)
    on left: 1 2, on right: 0
STATEMENT_LIST (26)
    on left: 3 4, on right: 2 4
STATEMENT (27)
    on left: 5 6 7 8 9, on right: 3 4 16 19
DECLARATION (28)
    on left: 11, on right: 5
$@1 (29)
    on left: 10, on right: 11
PRIMITIVE_TYPE (30)
    on left: 12 13, on right: 11
IF (31)
    on left: 16, on right: 6
$@2 (32)
    on left: 14, on right: 16
$@3 (33)
    on left: 15, on right: 16
WHILE (34)
    on left: 19, on right: 7
$@4 (35)
    on left: 17, on right: 19
$@5 (36)
    on left: 18, on right: 19
ASSIGNMENT (37)
    on left: 20, on right: 8
EXPRESSION (38)
    on left: 21 22, on right: 16 19 20 32
SIMPLE_EXPRESSION (39)
    on left: 23 24 25 26, on right: 21 22 25 26
TERM (40)
    on left: 27 28 29, on right: 23 24 25 26 28 29
FACTOR (41)
    on left: 30 31 32, on right: 27 28 29 34
PRINT (42)
    on left: 34, on right: 9
$@6 (43)
    on left: 33, on right: 34


State 0

    0 $accept: . METHOD_BODY $end

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    SYSOUT   shift, and go to state 4
    T_if     shift, and go to state 5
    T_while  shift, and go to state 6

    $default  reduce using rule 1 (METHOD_BODY)

    METHOD_BODY     go to state 7
    STATEMENT_LIST  go to state 8
    STATEMENT       go to state 9
    DECLARATION     go to state 10
    PRIMITIVE_TYPE  go to state 11
    IF              go to state 12
    WHILE           go to state 13
    ASSIGNMENT      go to state 14
    PRINT           go to state 15


State 1

   20 ASSIGNMENT: id . assign EXPRESSION Semi

    assign  shift, and go to state 16


State 2

   13 PRIMITIVE_TYPE: T_float .

    $default  reduce using rule 13 (PRIMITIVE_TYPE)


State 3

   12 PRIMITIVE_TYPE: T_int .

    $default  reduce using rule 12 (PRIMITIVE_TYPE)


State 4

   34 PRINT: SYSOUT . OPEN $@6 FACTOR CLOSE Semi

    OPEN  shift, and go to state 17


State 5

   16 IF: T_if . OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    OPEN  shift, and go to state 18


State 6

   19 WHILE: T_while . $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    $default  reduce using rule 17 ($@4)

    $@4  go to state 19


State 7

    0 $accept: METHOD_BODY . $end

    $end  shift, and go to state 20


State 8

    2 METHOD_BODY: STATEMENT_LIST .
    4 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    SYSOUT   shift, and go to state 4
    T_if     shift, and go to state 5
    T_while  shift, and go to state 6

    $default  reduce using rule 2 (METHOD_BODY)

    STATEMENT       go to state 21
    DECLARATION     go to state 10
    PRIMITIVE_TYPE  go to state 11
    IF              go to state 12
    WHILE           go to state 13
    ASSIGNMENT      go to state 14
    PRINT           go to state 15


State 9

    3 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 3 (STATEMENT_LIST)


State 10

    5 STATEMENT: DECLARATION .

    $default  reduce using rule 5 (STATEMENT)


State 11

   11 DECLARATION: PRIMITIVE_TYPE . id $@1 Semi

    id  shift, and go to state 22


State 12

    6 STATEMENT: IF .

    $default  reduce using rule 6 (STATEMENT)


State 13

    7 STATEMENT: WHILE .

    $default  reduce using rule 7 (STATEMENT)


State 14

    8 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 8 (STATEMENT)


State 15

    9 STATEMENT: PRINT .

    $default  reduce using rule 9 (STATEMENT)


State 16

   20 ASSIGNMENT: id assign . EXPRESSION Semi

    id     shift, and go to state 23
    num    shift, and go to state 24
    Minus  shift, and go to state 25
    OPEN   shift, and go to state 26

    EXPRESSION         go to state 27
    SIMPLE_EXPRESSION  go to state 28
    TERM               go to state 29
    FACTOR             go to state 30


State 17

   34 PRINT: SYSOUT OPEN . $@6 FACTOR CLOSE Semi

    $default  reduce using rule 33 ($@6)

    $@6  go to state 31


State 18

   16 IF: T_if OPEN . EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    id     shift, and go to state 23
    num    shift, and go to state 24
    Minus  shift, and go to state 25
    OPEN   shift, and go to state 26

    EXPRESSION         go to state 32
    SIMPLE_EXPRESSION  go to state 28
    TERM               go to state 29
    FACTOR             go to state 30


State 19

   19 WHILE: T_while $@4 . OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    OPEN  shift, and go to state 33


State 20

    0 $accept: METHOD_BODY $end .

    $default  accept


State 21

    4 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 4 (STATEMENT_LIST)


State 22

   11 DECLARATION: PRIMITIVE_TYPE id . $@1 Semi

    $default  reduce using rule 10 ($@1)

    $@1  go to state 34


State 23

   30 FACTOR: id .

    $default  reduce using rule 30 (FACTOR)


State 24

   31 FACTOR: num .

    $default  reduce using rule 31 (FACTOR)


State 25

   24 SIMPLE_EXPRESSION: Minus . TERM

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    TERM    go to state 35
    FACTOR  go to state 30


State 26

   32 FACTOR: OPEN . EXPRESSION CLOSE

    id     shift, and go to state 23
    num    shift, and go to state 24
    Minus  shift, and go to state 25
    OPEN   shift, and go to state 26

    EXPRESSION         go to state 36
    SIMPLE_EXPRESSION  go to state 28
    TERM               go to state 29
    FACTOR             go to state 30


State 27

   20 ASSIGNMENT: id assign EXPRESSION . Semi

    Semi  shift, and go to state 37


State 28

   21 EXPRESSION: SIMPLE_EXPRESSION .
   22           | SIMPLE_EXPRESSION . relop SIMPLE_EXPRESSION
   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   26                  | SIMPLE_EXPRESSION . Minus TERM

    relop  shift, and go to state 38
    Plus   shift, and go to state 39
    Minus  shift, and go to state 40

    $default  reduce using rule 21 (EXPRESSION)


State 29

   23 SIMPLE_EXPRESSION: TERM .
   28 TERM: TERM . Mul FACTOR
   29     | TERM . Div FACTOR

    Mul  shift, and go to state 41
    Div  shift, and go to state 42

    $default  reduce using rule 23 (SIMPLE_EXPRESSION)


State 30

   27 TERM: FACTOR .

    $default  reduce using rule 27 (TERM)


State 31

   34 PRINT: SYSOUT OPEN $@6 . FACTOR CLOSE Semi

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    FACTOR  go to state 43


State 32

   16 IF: T_if OPEN EXPRESSION . CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    CLOSE  shift, and go to state 44


State 33

   19 WHILE: T_while $@4 OPEN . EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    id     shift, and go to state 23
    num    shift, and go to state 24
    Minus  shift, and go to state 25
    OPEN   shift, and go to state 26

    EXPRESSION         go to state 45
    SIMPLE_EXPRESSION  go to state 28
    TERM               go to state 29
    FACTOR             go to state 30


State 34

   11 DECLARATION: PRIMITIVE_TYPE id $@1 . Semi

    Semi  shift, and go to state 46


State 35

   24 SIMPLE_EXPRESSION: Minus TERM .
   28 TERM: TERM . Mul FACTOR
   29     | TERM . Div FACTOR

    Mul  shift, and go to state 41
    Div  shift, and go to state 42

    $default  reduce using rule 24 (SIMPLE_EXPRESSION)


State 36

   32 FACTOR: OPEN EXPRESSION . CLOSE

    CLOSE  shift, and go to state 47


State 37

   20 ASSIGNMENT: id assign EXPRESSION Semi .

    $default  reduce using rule 20 (ASSIGNMENT)


State 38

   22 EXPRESSION: SIMPLE_EXPRESSION relop . SIMPLE_EXPRESSION

    id     shift, and go to state 23
    num    shift, and go to state 24
    Minus  shift, and go to state 25
    OPEN   shift, and go to state 26

    SIMPLE_EXPRESSION  go to state 48
    TERM               go to state 29
    FACTOR             go to state 30


State 39

   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus . TERM

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    TERM    go to state 49
    FACTOR  go to state 30


State 40

   26 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus . TERM

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    TERM    go to state 50
    FACTOR  go to state 30


State 41

   28 TERM: TERM Mul . FACTOR

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    FACTOR  go to state 51


State 42

   29 TERM: TERM Div . FACTOR

    id    shift, and go to state 23
    num   shift, and go to state 24
    OPEN  shift, and go to state 26

    FACTOR  go to state 52


State 43

   34 PRINT: SYSOUT OPEN $@6 FACTOR . CLOSE Semi

    CLOSE  shift, and go to state 53


State 44

   16 IF: T_if OPEN EXPRESSION CLOSE . Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 54


State 45

   19 WHILE: T_while $@4 OPEN EXPRESSION . CLOSE Openbracket $@5 STATEMENT Closebracket

    CLOSE  shift, and go to state 55


State 46

   11 DECLARATION: PRIMITIVE_TYPE id $@1 Semi .

    $default  reduce using rule 11 (DECLARATION)


State 47

   32 FACTOR: OPEN EXPRESSION CLOSE .

    $default  reduce using rule 32 (FACTOR)


State 48

   22 EXPRESSION: SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION .
   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   26                  | SIMPLE_EXPRESSION . Minus TERM

    Plus   shift, and go to state 39
    Minus  shift, and go to state 40

    $default  reduce using rule 22 (EXPRESSION)


State 49

   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus TERM .
   28 TERM: TERM . Mul FACTOR
   29     | TERM . Div FACTOR

    Mul  shift, and go to state 41
    Div  shift, and go to state 42

    $default  reduce using rule 25 (SIMPLE_EXPRESSION)


State 50

   26 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus TERM .
   28 TERM: TERM . Mul FACTOR
   29     | TERM . Div FACTOR

    Mul  shift, and go to state 41
    Div  shift, and go to state 42

    $default  reduce using rule 26 (SIMPLE_EXPRESSION)


State 51

   28 TERM: TERM Mul FACTOR .

    $default  reduce using rule 28 (TERM)


State 52

   29 TERM: TERM Div FACTOR .

    $default  reduce using rule 29 (TERM)


State 53

   34 PRINT: SYSOUT OPEN $@6 FACTOR CLOSE . Semi

    Semi  shift, and go to state 56


State 54

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket . $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    $default  reduce using rule 14 ($@2)

    $@2  go to state 57


State 55

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE . Openbracket $@5 STATEMENT Closebracket

    Openbracket  shift, and go to state 58


State 56

   34 PRINT: SYSOUT OPEN $@6 FACTOR CLOSE Semi .

    $default  reduce using rule 34 (PRINT)


State 57

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 . STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    SYSOUT   shift, and go to state 4
    T_if     shift, and go to state 5
    T_while  shift, and go to state 6

    STATEMENT       go to state 59
    DECLARATION     go to state 10
    PRIMITIVE_TYPE  go to state 11
    IF              go to state 12
    WHILE           go to state 13
    ASSIGNMENT      go to state 14
    PRINT           go to state 15


State 58

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket . $@5 STATEMENT Closebracket

    $default  reduce using rule 18 ($@5)

    $@5  go to state 60


State 59

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT . Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    Closebracket  shift, and go to state 61


State 60

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    SYSOUT   shift, and go to state 4
    T_if     shift, and go to state 5
    T_while  shift, and go to state 6

    STATEMENT       go to state 62
    DECLARATION     go to state 10
    PRIMITIVE_TYPE  go to state 11
    IF              go to state 12
    WHILE           go to state 13
    ASSIGNMENT      go to state 14
    PRINT           go to state 15


State 61

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket . T_else $@3 Openbracket STATEMENT Closebracket

    T_else  shift, and go to state 63


State 62

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT . Closebracket

    Closebracket  shift, and go to state 64


State 63

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else . $@3 Openbracket STATEMENT Closebracket

    $default  reduce using rule 15 ($@3)

    $@3  go to state 65


State 64

   19 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket .

    $default  reduce using rule 19 (WHILE)


State 65

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 . Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 66


State 66

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    SYSOUT   shift, and go to state 4
    T_if     shift, and go to state 5
    T_while  shift, and go to state 6

    STATEMENT       go to state 67
    DECLARATION     go to state 10
    PRIMITIVE_TYPE  go to state 11
    IF              go to state 12
    WHILE           go to state 13
    ASSIGNMENT      go to state 14
    PRINT           go to state 15


State 67

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT . Closebracket

    Closebracket  shift, and go to state 68


State 68

   16 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket .

    $default  reduce using rule 16 (IF)
